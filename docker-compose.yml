name: ${GLOBAL_NAME}

services:
  nginx:
    container_name: ${NGINX_CONTAINER_NAME}
    image: ${NGINX_IMAGE_NAME}:${NGINX_IMAGE_VERSION}
    restart: ${RESTART_POLICY}
    environment:
      - TZ=${TIMEZONE}
    ports:
      - "${NGINX_HTTP_PORT}:80"
    volumes:
      - ./config/nginx:/etc/nginx/conf.d
    networks:
      - default
    depends_on:
      - ckan
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: ${HEALTHCHECK_INTERVAL}
      timeout: ${HEALTHCHECK_TIMEOUT}
      retries: ${HEALTHCHECK_RETRIES}

  ckan:
    container_name: ${CKAN_CONTAINER_NAME}
    image: ${CKAN_IMAGE_NAME}:${CKAN_IMAGE_VERSION}
    restart: ${RESTART_POLICY}
    environment:
      - CKAN_SITE_URL=${CKAN_SITE_URL}
      - CKAN_SQLALCHEMY_URL=postgresql://ckan:${POSTGRES_PASSWORD}@postgres/ckan
      - CKAN_DATASTORE_WRITE_URL=postgresql://ckan:${POSTGRES_PASSWORD}@postgres/datastore
      - CKAN_DATASTORE_READ_URL=postgresql://datastore_ro:${DATASTORE_READONLY_PASSWORD}@postgres/datastore
      - CKANEXT__XLOADER__JOBS_DB__URI=postgresql://ckan:${POSTGRES_PASSWORD}@postgres/ckan
      - TZ=${TIMEZONE}
    volumes:
      - ckan_data:/var/lib/ckan
    networks:
      - default
    depends_on:
      - postgres
      - solr
      - redis
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:5000"]
      interval: ${HEALTHCHECK_INTERVAL}
      timeout: ${HEALTHCHECK_TIMEOUT}
      retries: ${HEALTHCHECK_RETRIES}

  postgres:
    container_name: ${POSTGRES_CONTAINER_NAME}
    image: ${POSTGRES_IMAGE_NAME}:${POSTGRES_IMAGE_VERSION}
    restart: ${RESTART_POLICY}
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DATASTORE_READONLY_PASSWORD=${DATASTORE_READONLY_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
      - TZ=${TIMEZONE}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./config/postgresql/init:/docker-entrypoint-initdb.d
    networks:
      - default
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: ${HEALTHCHECK_INTERVAL}
      timeout: ${HEALTHCHECK_TIMEOUT}
      retries: ${HEALTHCHECK_RETRIES}

  solr:
    container_name: ${SOLR_CONTAINER_NAME}
    image: ${SOLR_IMAGE_NAME}:${SOLR_IMAGE_VERSION}
    restart: ${RESTART_POLICY}
    environment:
      - TZ=${TIMEZONE}
    volumes:
      - solr_data:/opt/solr/server/solr/ckan/data/index
      - ./config/solr:/opt/solr/server/solr/ckan/conf
    networks:
      - default
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:8983/solr/"]
      interval: ${HEALTHCHECK_INTERVAL}
      timeout: ${HEALTHCHECK_TIMEOUT}
      retries: ${HEALTHCHECK_RETRIES}

  redis:
    container_name: ${REDIS_CONTAINER_NAME}
    image: ${REDIS_IMAGE_NAME}:${REDIS_IMAGE_VERSION}
    restart: ${RESTART_POLICY}
    environment:
      - TZ=${TIMEZONE}
    networks:
      - default
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: ${HEALTHCHECK_INTERVAL}
      timeout: ${HEALTHCHECK_TIMEOUT}
      retries: ${HEALTHCHECK_RETRIES}

networks:
  default:
    name: ${CKAN_CONTAINER_NAME}_network
    driver: bridge

volumes:
  ckan_data:
    name: ${CKAN_CONTAINER_NAME}_data
    driver: local
  postgres_data:
    name: ${POSTGRES_CONTAINER_NAME}_data
    driver: local
  solr_data:
    name: ${SOLR_CONTAINER_NAME}_data
    driver: local